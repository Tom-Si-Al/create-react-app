{"version":3,"sources":["validators.ts","components/Form.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["isEmailValid","email","includes","Form","state","input","myChangeHandler","event","setState","target","value","props","isValid","mySubmitHandler","preventDefault","onSubmit","this","InputGroup","className","FormControl","onChange","placeholder","name","isInvalid","Button","as","type","React","Component","App","valid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAAaA,EAAe,SAACC,GAC3B,QAAIA,EAAMC,SAAS,M,OCcRC,EAAb,4MACEC,MAAiB,CACfC,MAAO,GACPL,cAAc,GAHlB,EAMEM,gBAAkB,SAACC,GACjB,EAAKC,SACH,CACEH,MAAOE,EAAME,OAAOC,QAEtB,WACE,EAAKF,SACH,CACER,aAAcA,EAAa,EAAKI,MAAMC,SAExC,WACE,EAAKM,MAAMC,QAAQ,EAAKR,MAAMJ,qBAjB1C,EAwBEa,gBAAkB,SAACN,GACjBA,EAAMO,kBAzBV,4CA4BE,WACE,OACE,uBAAMC,SAAUC,KAAKH,gBAArB,UACE,8DACA,cAACI,EAAA,EAAD,CAAYC,UAAU,OAAtB,SACE,cAACC,EAAA,EAAD,CACEC,SAAUJ,KAAKV,gBACfe,YAAY,QACZ,aAAW,WACX,mBAAiB,eACjBC,KAAK,QACLV,QAASI,KAAKZ,MAAMJ,aACpBuB,WAAYP,KAAKZ,MAAMJ,iBAG3B,cAACwB,EAAA,EAAD,CAAQC,GAAG,QAAQC,KAAK,SAAShB,MAAM,kBA3C/C,GAA0BiB,IAAMC,WCmBjBC,G,wDA5Bb,aAAe,IAAD,8BACZ,cAAM,KAORjB,QAAU,SAACkB,GACT,EAAKtB,SAAS,CAAEI,QAASkB,KAPzB,EAAK1B,MAAQ,CACXC,MAAO,GACPO,SAAS,GAJC,E,0CAYd,WACE,OACE,qBAAKM,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,MAAf,SACE,cAAC,EAAD,CAAMN,QAASI,KAAKJ,YAEtB,8BACGI,KAAKZ,MAAMQ,QAAU,cAAgB,0D,GArBhCe,IAAMC,YCSTG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f7f938f7.chunk.js","sourcesContent":["export const isEmailValid = (email: string): boolean => {\n  if (email.includes('@')) {\n    return true\n  }\n  return false\n}\n","import React from 'react'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Button from 'react-bootstrap/Button'\n\nimport { isEmailValid } from '../validators'\n\ntype MyProps = {\n  // using `interface` is also ok\n  isValid: (valid: boolean) => void\n}\ntype MyState = {\n  input: string\n  isEmailValid: boolean\n}\nexport class Form extends React.Component<MyProps, MyState> {\n  state: MyState = {\n    input: '',\n    isEmailValid: false,\n  }\n\n  myChangeHandler = (event: any) => {\n    this.setState(\n      {\n        input: event.target.value,\n      },\n      () => {\n        this.setState(\n          {\n            isEmailValid: isEmailValid(this.state.input),\n          },\n          () => {\n            this.props.isValid(this.state.isEmailValid)\n          },\n        )\n      },\n    )\n  }\n\n  mySubmitHandler = (event: any) => {\n    event.preventDefault()\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.mySubmitHandler}>\n        <p>Enter your email, and submit:</p>\n        <InputGroup className=\"mb-3\">\n          <FormControl\n            onChange={this.myChangeHandler}\n            placeholder=\"Email\"\n            aria-label=\"Username\"\n            aria-describedby=\"basic-addon1\"\n            name=\"email\"\n            isValid={this.state.isEmailValid}\n            isInvalid={!this.state.isEmailValid}\n          />\n        </InputGroup>\n        <Button as=\"input\" type=\"submit\" value=\"Submit\" />\n      </form>\n    )\n  }\n}\n","import React from 'react'\n\nimport { Form } from './components/Form'\nimport './App.css'\n\nclass App extends React.Component<{}, { input: string; isValid: boolean }> {\n  constructor() {\n    super({})\n    this.state = {\n      input: '',\n      isValid: false,\n    }\n  }\n\n  isValid = (valid: boolean) => {\n    this.setState({ isValid: valid })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <Form isValid={this.isValid} />\n          </div>\n          <div>\n            {this.state.isValid ? 'Valid input' : <h3>Invalid input</h3>}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}